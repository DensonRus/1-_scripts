#Использовать v8runner
#Использовать json
#Использовать cmdline

//Конфигуратор = Новый УправлениеКонфигуратором();
//ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
//Конфигуратор.УстановитьКонтекст("/IBConnectionString""Srvr=ds-dev-app1; Ref='ut_ds_RC'""","", "");
//Конфигуратор.ОтключитьсяОтХранилища();
//СтрокаСоединениеСХранилищем = "C:\1c-Repository\ut-ds-deploy";
//ОбновитьКонфигурациюБазыДанныхИзХранилища
//Конфигуратор.ПодключитьсяКХранилищу(СтрокаСоединениеСХранилищем,"UtTestUpDate","UtTestUpDate",Истина);
//Конфигуратор.ПодключитьсяКХранилищу(СтрокаСоединениеСХранилищем,"UtTestUpDate","UtTestUpDate",Истина);
//Конфигуратор.ОбновитьКонфигурациюБазыДанных();

Перем СтрокаПодключения;
Перем ИмяБазы;
Перем РежимЗапуска;
Перем ПараметрыБазы;
Перем Логин;
Перем Пароль;


Процедура РаспарситьКоманднуюСтроку()
	
	Парсер = Новый ПарсерАргументовКоманднойСтроки();
	
	Парсер.ДобавитьПараметр("ИмяБазы");
	Парсер.ДобавитьИменованныйПараметр("-d");
	
	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
	
	ИмяБазы			= Параметры["ИмяБазы"];
	РежимЗапуска	= Параметры["-d"];
	
	Сообщить(РежимЗапуска);
	
КонецПроцедуры

Процедура ЧтениеНастроекJSON()
	
	КаталогСкрипта = Новый Файл(ТекущийСценарий().Источник).Путь;	
	ЧтениеТекста = Новый ЧтениеТекста(КаталогСкрипта + "/настройкиПодключенияКБазам.json");
	СтрокаJSON = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();	
	_преобразовательJSON = Новый ПарсерJSON();
	ПараметрыJSON = _преобразовательJSON.ПрочитатьJSON(СтрокаJSON);
	ПараметрыБазы = ПараметрыJSON.Получить(ИмяБазы);
	
КонецПроцедуры

Процедура ИнициализацияОбщихПеременных()
	
	СтрокаПодключения = ПараметрыБазы.Получить("base_path");
	Логин =  ПараметрыБазы.Получить("user");
	Пароль = ПараметрыБазы.Получить("pwd");
	
	
КонецПроцедуры	

Процедура Инициализация()
	
	РаспарситьКоманднуюСтроку();
	ЧтениеНастроекJSON();
	ИнициализацияОбщихПеременных();	
	
	Контекст = "/IBConnectionString" +""""+ СтрокаПодключения+"""";

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.УстановитьКонтекст(Контекст,Логин, Пароль);
	Сообщить(ТипЗнч(РежимЗапуска));
	Если РежимЗапуска = "0" ИЛИ РежимЗапуска = Неопределено Тогда
		
		ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
		//Конфигуратор.ПодключитьсяКХранилищу(ПараметрыБазы.Получить("storage_path"),ПараметрыБазы.Получить("storage_user"),ПараметрыБазы.Получить("storage_pwd"),Истина);
		Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
		
	Иначе
		
		Конфигуратор.ЗапуститьВРежимеПредприятия(,ИСТИНА);
		
	КонецЕсли;
	
	
	
	
	
	
	
КонецПроцедуры	

Инициализация();